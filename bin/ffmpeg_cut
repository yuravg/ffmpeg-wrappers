#!/usr/bin/env bash

# Cut from multi-media file

SCRIPT_NAME=$(basename "${BASH_SOURCE##*/}")

help () {
    echo "Usage:"
    echo "  $SCRIPT_NAME [input-file-name] [output-file-name] [start-time] [end-time]"
    echo "  $SCRIPT_NAME [input-file-name] [output-file-name] [start-time] -l [length]"
    echo
    echo "ARGS:"
    echo "    <input-file-name>"
    echo "            Name of the input audio file."
    echo "    <output-file-name>"
    echo "            Name of the output audio file."
    echo "    <start-time>"
    echo "            Start time."
    echo "            01:02:03 - 1 hour 2nd minute 3rd second of the file."
    echo "    <end-time>"
    echo "            End time."
    echo "            01:02:03 - 1 hour 2nd minute 3rd second of the file."
    echo "    <length>"
    echo "            Length."
    echo "            01:02:03 - 1 hour 2 minute 3 second of the file."
    echo "OPTIONS:"
    echo "    -l"
    echo "            Use <length> instead of <end-time>."
    echo
    echo " Usage example:"
    echo "   $SCRIPT_NAME a.mp3 b.mp3 1:2:3 -l 10:20"
    echo "   $SCRIPT_NAME a.mp3 b.mp3 1:2:3 -l 500"
    echo "   $SCRIPT_NAME a.mp3 b.mp3 100 200"
}

if [ "$#" -lt 4 ] || [ "$#" -gt 5 ] || [ "$1" = '-h' ] || [ "$1" = '--help' ] || [ "$1" = '-help' ]; then
    help
    exit 0
fi

FINPUT="$1"
FOUT="$2"

if [ ! -s "$FINPUT" ]; then
    echo "ERROR! Can't find input file: '$FINPUT'!"
    help
    exit 1
fi


if [[ ! "$3" =~ ^[0-9]+(:[0-9]+){0,2}$ ]]; then
    echo "ERROR! Wrong <start-time> format!"
    help
    exit 2
fi
START_TIME="$3"

END_TASK=""
if [ "$4" == "-l" ]; then
    if [[ ! "$5" =~ ^[0-9]+(:[0-9]+){0,2}$ ]]; then
        echo "ERROR! Wrong <length> format!"
        help
        exit 3
    fi
    END_TASK="-t $5"
else
    if [[ ! "$4" =~ ^[0-9]+(:[0-9]+){0,2}$ ]]; then
        echo "ERROR! Wrong <end-time> format!"
        help
        exit 4
    fi
    END_TASK="-to $4"
fi

BITRATE=$(ffprobe -hide_banner "$FINPUT" 2>&1 | grep 'bitrate' | sed 's/.*bitrate: \([0-9]*\) .*/\1/')

ffmpeg -hide_banner -i "$FINPUT" -ss "$START_TIME" $END_TASK -b:a "$BITRATE"k "$FOUT"
